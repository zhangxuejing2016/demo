<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xj.demo.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.xj.demo.domain.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, nickname, email, birthday, age
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from test_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from test_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xj.demo.domain.User" >
    insert into test_user (id, username, password,
      nickname, email, birthday, age)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{nickname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{age,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xj.demo.domain.User" >
    insert into test_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="email != null" >
        email,
      </if>
        <if test="birthday != null" >
            birthday,
        </if>
        <if test="age != null" >
            age,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
        <if test="email != null" >
            #{birthday,jdbcType=DATE},
        </if>
        <if test="email != null" >
            #{age,jdbcType=INTEGER},
        </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xj.demo.domain.User" >
    update test_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
        <if test="email != null" >
            birthday = #{birthday,jdbcType=DATE},
        </if>
        <if test="email != null" >
            age = #{age,jdbcType=INTEGER},
        </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xj.demo.domain.User" >
    update test_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <delete id="deleteByAgeAndBirthday">
        delete from test_user
        where birthday = #{birthday,jdbcType=DATE},
        and age = #{age,jdbcType=INTEGER}
    </delete>

    <select id="getAllUsers" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from test_user
    </select>

    <select id="getTestUsers" resultType="com.xj.demo.bean.UserTestBean">
        select username, password
        from test_user
        <where>
        1=1
        <if test="nameList != null" >
            and username in
            <foreach item="name" index="index" collection="nameList" open="(" separator="," close=")">
                #{name}
            </foreach>
        </if>
        <if test="passwordList != null" >
            or password in
            <foreach item="item" index="index" collection="passwordList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        </where>
    </select>

    <select id="findByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from test_user
        <where>
        1=1
        <if test="query.userName != null" >
            and username = #{query.userName,jdbcType=VARCHAR}
        </if>
        <if test="query.passWord != null" >
            and passWord = #{query.passWord,jdbcType=VARCHAR}
        </if>
        </where>
    </select>

</mapper>